"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'xg!a=90zn8vp296!&0%7bjwn^f#j#%c+1q_=k#s=+5%pjq4lg!'

# Если оно равно True, Django будет отображать подробные страницы с ошибками при выбрасывании
#  исключений в приложении
DEBUG = True

# как только мы развернем приложение необходимо добавить домен сайта в эту настройку,
# для того чтобы Django мог с ним работать
ALLOWED_HOSTS = []

# Для того чтобы Django начал отслеживать наше приложение и создал таблицы в базе данных для моделей,
# необходимо активировать его. Для этого отредактируйте settings.py и добавьте blog.apps.BlogConfig
#Класс BlogConfig – это конфигурация приложения. Теперь Django знает, что для этого проекта приложение
#  блога активно, и сможет загрузить его модели.
INSTALLED_APPS = [
    'django.contrib.admin', # сайт администрирования
    'django.contrib.auth', # подсистема аутентификации
    'django.contrib.contenttypes', # подсистема для работы с типами объектов системы
    'django.contrib.sessions', # подсистема сессий
    'django.contrib.messages', # подсистема сообщений
    'django.contrib.staticfiles', # подсистема для управления статическим содержимым сайта
    'blog.apps.BlogConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls' # указывает на Python-модуль, который содержит корневые шаблоны URL’ов приложения

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Мы можем определить используемую в проекте СУБД в файле settings.py в настройке DATABASES.
# Django одновременно поддерживает работу с несколькими базами данных: MySQL, PostgreSQL, SQLite и Oracle.
# По умолчанию используется SQLite.

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

# определяет код языка по умолчанию для Django-сайта
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
